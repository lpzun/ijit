// automatically generated by CPROVER/SATABS

// variables with procedure-global scope

decl b0_0_eq_usecount;  // 0 == usecount
decl b1_1_eq_usecount;  // 1 == usecount
decl b4_0_eq_flag1;     // 0 == flag1

// main
void main() begin

      // the procedure-local variables

  decl b2_0_eq_count;  // LOCAL -- 0 == count
  decl b3_0_eq_rval;   // LOCAL -- 0 == rval

      // initialization of the shared-global and thread-local variables

      b0_0_eq_usecount:=*; 
      b1_1_eq_usecount:=*; 
      b4_0_eq_flag1:=*; 

 PC0: skip; // location only

    // file <built-in-additions> line 27
 PC1: skip; // no predicates changed

    // file <built-in-additions> line 28
 PC2: skip; // no predicates changed

    // file <built-in-additions> line 30
 PC3: skip; // no predicates changed

    // file main.c line 7
 PC4: b0_0_eq_usecount,b1_1_eq_usecount := 1,0;
    // TO Predicates: b0_0_eq_usecount b1_1_eq_usecount

    // file main.c line 8
 PC5: skip; // no predicates changed

    // file main.c line 9
 PC6: b4_0_eq_flag1 := 1;
    // TO Predicates: b4_0_eq_flag1

    // file main.c line 10
 PC7: skip; // no predicates changed

    // file main.c line 11
 PC8: skip; // no predicates changed

 PC9: skip; // location only

PC10: skip; // location only

    // file main.c line 90 function main
PC11: skip; // location only

    // file main.c line 54 function thr1
PC12: b3_0_eq_rval := *;
    // TO Predicates: b3_0_eq_rval

    // file main.c line 55 function thr1
PC13: b2_0_eq_count := *;
    // TO Predicates: b2_0_eq_count

    // file main.c line 57 function thr1
PC14: b0_0_eq_usecount,b1_1_eq_usecount := 1,0;
    // TO Predicates: b0_0_eq_usecount b1_1_eq_usecount

    // file main.c line 58 function thr1
PC15: skip; // no predicates changed

    // file main.c line 60 function thr1
PC16: skip; // no predicates changed

    // file main.c line 61 function thr1
  l1:
PC17: if 0 then goto l2; fi;

    // file main.c line 64 function thr1
    // FROM Predicates: b4_0_eq_flag1
PC18: if !b4_0_eq_flag1 then goto l2; fi;

    // file main.c line 61 function thr1
PC19: goto l1;

    // file main.c line 70 function thr1
    // FROM Predicates: b3_0_eq_rval
  l2:
PC20: if !b3_0_eq_rval then goto l3; fi;

    // file main.c line 72 function thr1
PC21: b2_0_eq_count := 0;
    // TO Predicates: b2_0_eq_count

    // file main.c line 73 function thr1
PC22: skip; // location only

    // file main.c line 36 function dummy_release
PC23: b0_0_eq_usecount,b1_1_eq_usecount := b1_1_eq_usecount,*;
    // TO Predicates: b0_0_eq_usecount b1_1_eq_usecount

    // file main.c line 37 function dummy_release
PC24: skip; // no predicates changed

    // file main.c line 39 function dummy_release
PC25: skip; // location only

PC26: goto l4;

    // file main.c line 76 function thr1
  l3:
PC27: b2_0_eq_count := 1;
    // TO Predicates: b2_0_eq_count

    // file main.c line 78 function thr1
    // FROM Predicates: b2_0_eq_count
  l4:
PC28: if !b2_0_eq_count then goto l2; fi;

    // file main.c line 80 function thr1
PC29: skip; // location only

    // file main.c line 36 function dummy_release
    // FROM Predicates: b1_1_eq_usecount
PC30: b0_0_eq_usecount,b1_1_eq_usecount := b1_1_eq_usecount,*;
    // TO Predicates: b0_0_eq_usecount b1_1_eq_usecount

    // file main.c line 37 function dummy_release
PC31: skip; // no predicates changed

    // file main.c line 39 function dummy_release
PC32: skip; // location only

    // file main.c line 82 function thr1
PC33: skip; // location only

    // file main.c line 43 function unregister_chrdev
    // FROM Predicates: b0_0_eq_usecount
PC34: if b0_0_eq_usecount then goto l5; fi;

    // file main.c line 46 function unregister_chrdev
PC35: assert(0);

    // file main.c line 50 function unregister_chrdev
  l5:
PC36: goto l5;

PC37: skip;

end

// c::__CPROVER_initialize
void c$$__CPROVER_initialize() begin

      // the procedure-local variables

  decl b2_0_eq_count;  // LOCAL -- 0 == count
  decl b3_0_eq_rval;   // LOCAL -- 0 == rval

end

// c::thr2
void c$$thr2() begin

      // the procedure-local variables

  decl b2_0_eq_count;  // LOCAL -- 0 == count
  decl b3_0_eq_rval;   // LOCAL -- 0 == rval

end

// c::dummy_release
void c$$dummy_release() begin

      // the procedure-local variables

  decl b2_0_eq_count;  // LOCAL -- 0 == count
  decl b3_0_eq_rval;   // LOCAL -- 0 == rval

end

// c::unregister_chrdev
void c$$unregister_chrdev() begin

      // the procedure-local variables

  decl b2_0_eq_count;  // LOCAL -- 0 == count
  decl b3_0_eq_rval;   // LOCAL -- 0 == rval

end

// c::thr1
void c$$thr1() begin

      // the procedure-local variables

  decl b2_0_eq_count;  // LOCAL -- 0 == count
  decl b3_0_eq_rval;   // LOCAL -- 0 == rval

end

// c::main
void c$$main() begin

      // the procedure-local variables

  decl b2_0_eq_count;  // LOCAL -- 0 == count
  decl b3_0_eq_rval;   // LOCAL -- 0 == rval

end

