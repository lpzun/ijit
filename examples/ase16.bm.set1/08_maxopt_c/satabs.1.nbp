// automatically generated by CPROVER/SATABS

// variables with procedure-global scope


// main
void main() begin

// the procedure-local variables

decl b0_my_max_lt_e;  // LOCAL -- my_max < e

// initialization of the shared-global and thread-local variables


0: skip; // location only

// file <built-in-additions> line 27
1: skip; // no predicates changed

// file <built-in-additions> line 28
2: skip; // no predicates changed

// file <built-in-additions> line 30
3: skip; // no predicates changed

// file ./cav16.bm/08_maxopt_c/main.c line 36
4: skip; // no predicates changed

// file ./cav16.bm/08_maxopt_c/main.c line 38
5: skip; // no predicates changed

6: skip; // location only

7: skip; // location only

// file ./cav16.bm/08_maxopt_c/main.c line 84 function main
//l1:
8: if 0 then goto 50; fi;

9: start_thread goto 11;

10: goto 49;

//l2:
11: skip; // location only

// file ./cav16.bm/08_maxopt_c/main.c line 71 function thr1
12: skip; // no predicates changed

// file ./cav16.bm/08_maxopt_c/main.c line 74 function thr1
13: assume((*) & (*) & (*));

// file ./cav16.bm/08_maxopt_c/main.c line 79 function thr1
14: skip; // location only

// file ./cav16.bm/08_maxopt_c/main.c line 41 function findMax
15: skip; // no predicates changed

16: skip; // no predicates changed

17: skip; // no predicates changed

// file ./cav16.bm/08_maxopt_c/main.c line 42 function findMax
18: b0_my_max_lt_e := *;
// TO Predicates: b0_my_max_lt_e

// file ./cav16.bm/08_maxopt_c/main.c line 43 function findMax
19: b0_my_max_lt_e := *;
// TO Predicates: b0_my_max_lt_e

20: b0_my_max_lt_e := *;
// TO Predicates: b0_my_max_lt_e

// file ./cav16.bm/08_maxopt_c/main.c line 44 function findMax
21: skip; // no predicates changed

// file ./cav16.bm/08_maxopt_c/main.c line 45 function findMax
22: skip; // no predicates changed

// file ./cav16.bm/08_maxopt_c/main.c line 47 function findMax
23: skip; // no predicates changed

//l3:
24: if * then goto 31; fi;

// file ./cav16.bm/08_maxopt_c/main.c line 48 function findMax
25: b0_my_max_lt_e := *;
// TO Predicates: b0_my_max_lt_e

// file ./cav16.bm/08_maxopt_c/main.c line 49 function findMax
26: if !b0_my_max_lt_e then goto 28; fi;

// file ./cav16.bm/08_maxopt_c/main.c line 50 function findMax
27: b0_my_max_lt_e := 0;
// TO Predicates: b0_my_max_lt_e

// file ./cav16.bm/08_maxopt_c/main.c line 52 function findMax
//l4:
28: assert(!b0_my_max_lt_e);

// file ./cav16.bm/08_maxopt_c/main.c line 47 function findMax
29: skip; // no predicates changed

30: goto 24;

// file ./cav16.bm/08_maxopt_c/main.c line 55 function findMax
//l5:
31: if 0 then goto 80; fi;

// file ./cav16.bm/08_maxopt_c/main.c line 56 function findMax
32: skip; // no predicates changed

// file ./cav16.bm/08_maxopt_c/main.c line 57 function findMax
33: if * then goto 43; fi;

// file ./cav16.bm/08_maxopt_c/main.c line 58 function findMax
34: atomic_begin;

35: if !(*) then goto 39; fi;

36: skip; // no predicates changed

37: skip; // no predicates changed

38: goto 40;

//l6:
39: skip; // no predicates changed

//l7:
40: atomic_end;

// file ./cav16.bm/08_maxopt_c/main.c line 60 function findMax
41: if !(*) then goto 80; fi;

42: goto 44;

// file ./cav16.bm/08_maxopt_c/main.c line 63 function findMax
//l8:
43: goto 80;

// file ./cav16.bm/08_maxopt_c/main.c line 55 function findMax
//l9:
44: goto 31;

// file ./cav16.bm/08_maxopt_c/main.c line 67 function findMax
//l10:
45: assert(*);

// file ./cav16.bm/08_maxopt_c/main.c line 68 function findMax
46: skip; // location only

// file ./cav16.bm/08_maxopt_c/main.c line 80 function thr1
47: skip; // location only

// file ./cav16.bm/08_maxopt_c/main.c line 84 function main
48: end_thread;

//l11:
49: goto 8;

// file ./cav16.bm/08_maxopt_c/main.c line 85 function main
//l12:
50: skip; // no predicates changed

51: skip; // location only

52: skip;

end

// c::__CPROVER_initialize
void c$$__CPROVER_initialize() begin

// the procedure-local variables

decl b0_my_max_lt_e;  // LOCAL -- my_max < e

end

// c::findMax
void c$$findMax() begin

// the procedure-local variables

decl b0_my_max_lt_e;  // LOCAL -- my_max < e

end

// c::thr1
void c$$thr1() begin

// the procedure-local variables

decl b0_my_max_lt_e;  // LOCAL -- my_max < e

end

// c::main
void c$$main() begin

// the procedure-local variables

decl b0_my_max_lt_e;  // LOCAL -- my_max < e

end

