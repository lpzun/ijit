// automatically generated by CPROVER/SATABS

// variables with procedure-global scope

decl b0_1_eq_m;  // 1 == m

// main
void main() begin

      // initialization of the shared-global and thread-local variables

      b0_1_eq_m:=*; 

 PC0: skip; // location only

    // file <built-in-additions> line 27
 PC1: skip; // no predicates changed

    // file <built-in-additions> line 28
 PC2: skip; // no predicates changed

    // file <built-in-additions> line 30
 PC3: skip; // no predicates changed

    // file ./cav16.bm/05_maxsim_l/main.c line 23
 PC4: skip; // no predicates changed

 PC5: b0_1_eq_m := 0;
    // TO Predicates: b0_1_eq_m

    // file ./cav16.bm/05_maxsim_l/main.c line 25
 PC6: skip; // no predicates changed

 PC7: skip; // location only

 PC8: skip; // location only

    // file ./cav16.bm/05_maxsim_l/main.c line 60 function main
  l1:
 PC9: if 0 then goto l7; fi;

PC10: start_thread goto l2;

PC11: goto l6;

  l2:
PC12: skip; // location only

    // file ./cav16.bm/05_maxsim_l/main.c line 47 function thr1
PC13: skip; // no predicates changed

    // file ./cav16.bm/05_maxsim_l/main.c line 50 function thr1
PC14: assume((*) & (*) & (*));

    // file ./cav16.bm/05_maxsim_l/main.c line 55 function thr1
PC15: skip; // location only

    // file ./cav16.bm/05_maxsim_l/main.c line 29 function findMax
PC16: skip; // no predicates changed

PC17: skip; // no predicates changed

PC18: skip; // no predicates changed

    // file ./cav16.bm/05_maxsim_l/main.c line 30 function findMax
PC19: skip; // no predicates changed

    // file ./cav16.bm/05_maxsim_l/main.c line 32 function findMax
PC20: skip; // no predicates changed

  l3:
PC21: if * then goto l5; fi;

    // file ./cav16.bm/05_maxsim_l/main.c line 33 function findMax
PC22: skip; // no predicates changed

    // file ./cav16.bm/05_maxsim_l/main.c line 35 function findMax
PC23: atomic_begin;

    // file ./cav16.bm/05_maxsim_l/main.c line 35 function findMax
PC24: assume(*);

    // file ./cav16.bm/05_maxsim_l/main.c line 35 function findMax
PC25: b0_1_eq_m := 1;
    // TO Predicates: b0_1_eq_m

PC26: atomic_end;

    // file ./cav16.bm/05_maxsim_l/main.c line 37 function findMax
PC27: if * then goto l4; fi;

    // file ./cav16.bm/05_maxsim_l/main.c line 38 function findMax
PC28: skip; // no predicates changed

    // file ./cav16.bm/05_maxsim_l/main.c line 41 function findMax
  l4:
PC29: atomic_begin;

    // file ./cav16.bm/05_maxsim_l/main.c line 41 function findMax
    // FROM Predicates: b0_1_eq_m
PC30: assume(b0_1_eq_m);

    // file ./cav16.bm/05_maxsim_l/main.c line 41 function findMax
PC31: b0_1_eq_m := 0;
    // TO Predicates: b0_1_eq_m

PC32: atomic_end;

    // file ./cav16.bm/05_maxsim_l/main.c line 42 function findMax
PC33: assert(*);

    // file ./cav16.bm/05_maxsim_l/main.c line 32 function findMax
PC34: skip; // no predicates changed

PC35: goto l3;

    // file ./cav16.bm/05_maxsim_l/main.c line 44 function findMax
  l5:
PC36: skip; // location only

    // file ./cav16.bm/05_maxsim_l/main.c line 56 function thr1
PC37: skip; // location only

    // file ./cav16.bm/05_maxsim_l/main.c line 60 function main
PC38: end_thread;

  l6:
PC39: goto l1;

    // file ./cav16.bm/05_maxsim_l/main.c line 61 function main
  l7:
PC40: skip; // no predicates changed

PC41: skip; // location only

PC42: skip;

end

// c::__CPROVER_initialize
void c$$__CPROVER_initialize() begin

end

// c::findMax
void c$$findMax() begin

end

// c::thr1
void c$$thr1() begin

end

// c::main
void c$$main() begin

end

