// automatically generated by CPROVER/SATABS

// variables with procedure-global scope


// main
void main() begin

      // the procedure-local variables

  decl b0_c_lt_e;  // LOCAL -- c < e

      // initialization of the shared-global and thread-local variables


 PC0: skip; // location only

    // file <built-in-additions> line 27
 PC1: skip; // no predicates changed

    // file <built-in-additions> line 28
 PC2: skip; // no predicates changed

    // file <built-in-additions> line 30
 PC3: skip; // no predicates changed

    // file ./cav16.bm/06_maxsim_c/main.c line 8
 PC4: skip; // no predicates changed

    // file ./cav16.bm/06_maxsim_c/main.c line 10
 PC5: skip; // no predicates changed

 PC6: skip; // location only

 PC7: skip; // location only

    // file ./cav16.bm/06_maxsim_c/main.c line 79 function main
  l1:
 PC8: if 0 then goto l12; fi;

 PC9: start_thread goto l2;

PC10: goto l11;

  l2:
PC11: skip; // location only

    // file ./cav16.bm/06_maxsim_c/main.c line 66 function thr1
PC12: skip; // no predicates changed

    // file ./cav16.bm/06_maxsim_c/main.c line 69 function thr1
PC13: assume((*) & (*) & (*));

    // file ./cav16.bm/06_maxsim_c/main.c line 74 function thr1
PC14: skip; // location only

    // file ./cav16.bm/06_maxsim_c/main.c line 41 function findMax
PC15: skip; // no predicates changed

PC16: skip; // no predicates changed

PC17: skip; // no predicates changed

    // file ./cav16.bm/06_maxsim_c/main.c line 42 function findMax
PC18: b0_c_lt_e := *;
    // TO Predicates: b0_c_lt_e

    // file ./cav16.bm/06_maxsim_c/main.c line 43 function findMax
PC19: b0_c_lt_e := *;
    // TO Predicates: b0_c_lt_e

    // file ./cav16.bm/06_maxsim_c/main.c line 44 function findMax
PC20: skip; // no predicates changed

    // file ./cav16.bm/06_maxsim_c/main.c line 46 function findMax
PC21: skip; // no predicates changed

  l3:
PC22: if * then goto l10; fi;

    // file ./cav16.bm/06_maxsim_c/main.c line 47 function findMax
PC23: b0_c_lt_e := *;
    // TO Predicates: b0_c_lt_e

    // file ./cav16.bm/06_maxsim_c/main.c line 49 function findMax
  l4:
PC24: if 0 then goto l9; fi;

    // file ./cav16.bm/06_maxsim_c/main.c line 50 function findMax
PC25: b0_c_lt_e := *;
    // TO Predicates: b0_c_lt_e

    // file ./cav16.bm/06_maxsim_c/main.c line 51 function findMax
    // FROM Predicates: b0_c_lt_e
PC26: if !b0_c_lt_e then goto l7; fi;

    // file ./cav16.bm/06_maxsim_c/main.c line 52 function findMax
PC27: atomic_begin;

PC28: if !(*) then goto l5; fi;

PC29: skip; // no predicates changed

PC30: skip; // no predicates changed

PC31: goto l6;

  l5:
PC32: skip; // no predicates changed

  l6:
PC33: atomic_end;

    // file ./cav16.bm/06_maxsim_c/main.c line 54 function findMax
PC34: if !(*) then goto l9; fi;

PC35: goto l8;

    // file ./cav16.bm/06_maxsim_c/main.c line 57 function findMax
  l7:
PC36: goto l9;

    // file ./cav16.bm/06_maxsim_c/main.c line 49 function findMax
  l8:
PC37: goto l4;

    // file ./cav16.bm/06_maxsim_c/main.c line 61 function findMax
  l9:
PC38: assert(*);

    // file ./cav16.bm/06_maxsim_c/main.c line 46 function findMax
PC39: skip; // no predicates changed

PC40: goto l3;

    // file ./cav16.bm/06_maxsim_c/main.c line 63 function findMax
 l10:
PC41: skip; // location only

    // file ./cav16.bm/06_maxsim_c/main.c line 75 function thr1
PC42: skip; // location only

    // file ./cav16.bm/06_maxsim_c/main.c line 79 function main
PC43: end_thread;

 l11:
PC44: goto l1;

    // file ./cav16.bm/06_maxsim_c/main.c line 80 function main
 l12:
PC45: skip; // no predicates changed

PC46: skip; // location only

PC47: skip;

end

// c::__CPROVER_initialize
void c$$__CPROVER_initialize() begin

      // the procedure-local variables

  decl b0_c_lt_e;  // LOCAL -- c < e

end

// c::findMax
void c$$findMax() begin

      // the procedure-local variables

  decl b0_c_lt_e;  // LOCAL -- c < e

end

// c::thr1
void c$$thr1() begin

      // the procedure-local variables

  decl b0_c_lt_e;  // LOCAL -- c < e

end

// c::main
void c$$main() begin

      // the procedure-local variables

  decl b0_c_lt_e;  // LOCAL -- c < e

end

