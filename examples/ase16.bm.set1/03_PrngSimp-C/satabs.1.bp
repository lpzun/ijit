// automatically generated by CPROVER/SATABS

// variables with procedure-global scope

decl b0_0_eq_seed;  // 0 == seed

// main
void main() begin

      // initialization of the shared-global and thread-local variables

      b0_0_eq_seed:=*; 

 PC0: skip; // location only

    // file <built-in-additions> line 27
 PC1: skip; // no predicates changed

    // file <built-in-additions> line 28
 PC2: skip; // no predicates changed

    // file <built-in-additions> line 30
 PC3: skip; // no predicates changed

    // file ./cav16.bm/03_PrngSimp-C/main.c line 28
 PC4: skip; // no predicates changed

    // file ./cav16.bm/03_PrngSimp-C/main.c line 36
 PC5: b0_0_eq_seed := 0;
    // TO Predicates: b0_0_eq_seed

 PC6: skip; // location only

 PC7: skip; // location only

    // file ./cav16.bm/03_PrngSimp-C/main.c line 61 function main
  l1:
 PC8: if 0 then goto l5; fi;

 PC9: start_thread goto l2;

PC10: goto l4;

  l2:
PC11: skip; // location only

    // file ./cav16.bm/03_PrngSimp-C/main.c line 55 function thr1
PC12: skip; // location only

    // file ./cav16.bm/03_PrngSimp-C/main.c line 41 function PseudoRandomUsingAtomic_nextInt
PC13: skip; // no predicates changed

PC14: skip; // no predicates changed

PC15: skip; // no predicates changed

    // file ./cav16.bm/03_PrngSimp-C/main.c line 43 function PseudoRandomUsingAtomic_nextInt
PC16: assert(!b0_0_eq_seed);

    // file ./cav16.bm/03_PrngSimp-C/main.c line 45 function PseudoRandomUsingAtomic_nextInt
PC17: atomic_begin;

    // file ./cav16.bm/03_PrngSimp-C/main.c line 45 function PseudoRandomUsingAtomic_nextInt
PC18: assume(*);

    // file ./cav16.bm/03_PrngSimp-C/main.c line 45 function PseudoRandomUsingAtomic_nextInt
PC19: skip; // no predicates changed

PC20: atomic_end;

    // file ./cav16.bm/03_PrngSimp-C/main.c line 46 function PseudoRandomUsingAtomic_nextInt
PC21: skip; // no predicates changed

    // file ./cav16.bm/03_PrngSimp-C/main.c line 47 function PseudoRandomUsingAtomic_nextInt
PC22: skip; // location only

    // file ./cav16.bm/03_PrngSimp-C/main.c line 30 function calculateNext
PC23: skip; // no predicates changed

PC24: skip; // no predicates changed

PC25: skip; // no predicates changed

    // file ./cav16.bm/03_PrngSimp-C/main.c line 31 function calculateNext
  l3:
PC26: skip; // location only

PC27: skip; // no predicates changed

    // file ./cav16.bm/03_PrngSimp-C/main.c line 32 function calculateNext
PC28: if (*) | (*) then goto l3; fi;

    // file ./cav16.bm/03_PrngSimp-C/main.c line 33 function calculateNext
PC29: skip; // no predicates changed

    // file ./cav16.bm/03_PrngSimp-C/main.c line 34 function calculateNext
PC30: skip; // location only

    // file ./cav16.bm/03_PrngSimp-C/main.c line 48 function PseudoRandomUsingAtomic_nextInt
PC31: b0_0_eq_seed := *;
    // TO Predicates: b0_0_eq_seed

    // file ./cav16.bm/03_PrngSimp-C/main.c line 49 function PseudoRandomUsingAtomic_nextInt
PC32: atomic_begin;

    // file ./cav16.bm/03_PrngSimp-C/main.c line 49 function PseudoRandomUsingAtomic_nextInt
PC33: assume(*);

    // file ./cav16.bm/03_PrngSimp-C/main.c line 49 function PseudoRandomUsingAtomic_nextInt
PC34: skip; // no predicates changed

PC35: atomic_end;

    // file ./cav16.bm/03_PrngSimp-C/main.c line 50 function PseudoRandomUsingAtomic_nextInt
PC36: skip; // no predicates changed

    // file ./cav16.bm/03_PrngSimp-C/main.c line 51 function PseudoRandomUsingAtomic_nextInt
PC37: skip; // no predicates changed

    // file ./cav16.bm/03_PrngSimp-C/main.c line 52 function PseudoRandomUsingAtomic_nextInt
PC38: skip; // location only

    // file ./cav16.bm/03_PrngSimp-C/main.c line 56 function thr1
PC39: skip; // location only

    // file ./cav16.bm/03_PrngSimp-C/main.c line 61 function main
PC40: end_thread;

  l4:
PC41: goto l1;

    // file ./cav16.bm/03_PrngSimp-C/main.c line 62 function main
  l5:
PC42: skip; // no predicates changed

PC43: skip; // location only

PC44: skip;

end

// c::__CPROVER_initialize
void c$$__CPROVER_initialize() begin

end

// c::calculateNext
void c$$calculateNext() begin

end

// c::rand
void c$$rand() begin

end

// c::PseudoRandomUsingAtomic_nextInt
void c$$PseudoRandomUsingAtomic_nextInt() begin

end

// c::thr1
void c$$thr1() begin

end

// c::main
void c$$main() begin

end

