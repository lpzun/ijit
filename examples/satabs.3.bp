// automatically generated by CPROVER/SATABS

// variables with procedure-global scope

decl b0_0_eq_usecount;  // 0 == usecount
decl b1_1_eq_usecount;  // 1 == usecount
decl b4_0_eq_flag1;     // 0 == flag1

// main
void main() begin

// the procedure-local variables

decl b2_0_eq_count;  // LOCAL -- 0 == count
decl b3_0_eq_rval;   // LOCAL -- 0 == rval

// initialization of the shared-global and thread-local variables


0: skip; // location only

// file <built-in-additions> line 27
1: skip; // no predicates changed

// file <built-in-additions> line 28
2: skip; // no predicates changed

// file <built-in-additions> line 30
3: skip; // no predicates changed

// file main.c line 7
4: b0_0_eq_usecount,b1_1_eq_usecount := 1,0;
// TO Predicates: b0_0_eq_usecount b1_1_eq_usecount

// file main.c line 8
5: skip; // no predicates changed

// file main.c line 9
6: b4_0_eq_flag1 := 1;
// TO Predicates: b4_0_eq_flag1

// file main.c line 10
7: skip; // no predicates changed

// file main.c line 11
8: skip; // no predicates changed

9: skip; // location only

10: skip; // location only

// file main.c line 90 function main
11: skip; // location only

// file main.c line 54 function thr1
12: b3_0_eq_rval := *;
// TO Predicates: b3_0_eq_rval

// file main.c line 55 function thr1
13: b2_0_eq_count := *;
// TO Predicates: b2_0_eq_count

// file main.c line 57 function thr1
14: b0_0_eq_usecount,b1_1_eq_usecount := 1,0 constrain 'b2_0_eq_count;
// TO Predicates: b0_0_eq_usecount b1_1_eq_usecount

// file main.c line 58 function thr1
15: skip; // no predicates changed

// file main.c line 60 function thr1
16: skip; // no predicates changed

// file main.c line 61 function thr1
//l1:
17: if (((((*))))) then goto 20; fi;

// file main.c line 64 function thr1
// FROM Predicates: b4_0_eq_flag1
18: if !b4_0_eq_flag1 then goto 20; fi;

// file main.c line 61 function thr1
19: goto 17;

// file main.c line 70 function thr1
// FROM Predicates: b3_0_eq_rval
//l2:
20: if !b3_0_eq_rval then goto 27; fi;

// file main.c line 72 function thr1
21: b2_0_eq_count := 0;
// TO Predicates: b2_0_eq_count

// file main.c line 73 function thr1
22: skip; // location only

// file main.c line 36 function dummy_release
23: b0_0_eq_usecount,b1_1_eq_usecount := b1_1_eq_usecount,*;
// TO Predicates: b0_0_eq_usecount b1_1_eq_usecount

// file main.c line 37 function dummy_release
24: skip; // no predicates changed

// file main.c line 39 function dummy_release
25: skip; // location only

26: goto 28;

// file main.c line 76 function thr1
//l3:
27: b2_0_eq_count := 1;
// TO Predicates: b2_0_eq_count

// file main.c line 78 function thr1
// FROM Predicates: b2_0_eq_count
//l4:
28: if (b0_0_eq_usecount && *) then goto 20; fi;

// file main.c line 80 function thr1
29: skip; // location only

// file main.c line 36 function dummy_release
// FROM Predicates: b1_1_eq_usecount
30: b0_0_eq_usecount,b1_1_eq_usecount := b1_1_eq_usecount,*;
// TO Predicates: b0_0_eq_usecount b1_1_eq_usecount

// file main.c line 37 function dummy_release
31: skip; // no predicates changed

// file main.c line 39 function dummy_release
32: skip; // location only

// file main.c line 82 function thr1
33: skip; // location only

// file main.c line 43 function unregister_chrdev
// FROM Predicates: b0_0_eq_usecount
34: if b0_0_eq_usecount then goto 36; fi;

// file main.c line 46 function unregister_chrdev
35: assert(!(*));

// file main.c line 50 function unregister_chrdev
//l5:
36: goto 36;

37: skip;

end

// c::__CPROVER_initialize
void c$$__CPROVER_initialize() begin

// the procedure-local variables

decl b2_0_eq_count;  // LOCAL -- 0 == count
decl b3_0_eq_rval;   // LOCAL -- 0 == rval

end

// c::thr2
void c$$thr2() begin

// the procedure-local variables

decl b2_0_eq_count;  // LOCAL -- 0 == count
decl b3_0_eq_rval;   // LOCAL -- 0 == rval

end

// c::dummy_release
void c$$dummy_release() begin

// the procedure-local variables

decl b2_0_eq_count;  // LOCAL -- 0 == count
decl b3_0_eq_rval;   // LOCAL -- 0 == rval

end

// c::unregister_chrdev
void c$$unregister_chrdev() begin

// the procedure-local variables

decl b2_0_eq_count;  // LOCAL -- 0 == count
decl b3_0_eq_rval;   // LOCAL -- 0 == rval

end

// c::thr1
void c$$thr1() begin

// the procedure-local variables

decl b2_0_eq_count;  // LOCAL -- 0 == count
decl b3_0_eq_rval;   // LOCAL -- 0 == rval

end

// c::main
void c$$main() begin

// the procedure-local variables

decl b2_0_eq_count;  // LOCAL -- 0 == count
decl b3_0_eq_rval;   // LOCAL -- 0 == rval

end

